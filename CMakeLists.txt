CMAKE_MINIMUM_REQUIRED (VERSION 2.6)
PROJECT (auto_tmpdir C)

#
# For finding packages:
#
INCLUDE(CheckIncludeFiles)
INCLUDE(FindPackageHandleStandardArgs)

IF (NOT SLURM_PREFIX)
	SET (SLURM_PREFIX "/usr/local" CACHE PATH "Directory in which SLURM is installed.")
ENDIF (NOT SLURM_PREFIX)
IF (SLURM_PREFIX)
	LIST(APPEND CMAKE_PREFIX_PATH ${SLURM_PREFIX})
ENDIF (SLURM_PREFIX)

FIND_PATH(SLURM_INCLUDE_DIR NAMES slurm/slurm.h)
FIND_LIBRARY(SLURM_LIBRARY NAMES libslurm.so)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(SLURM DEFAULT_MSG SLURM_LIBRARY SLURM_INCLUDE_DIR)
IF (NOT SLURM_FOUND)
	MESSAGE(FATAL_ERROR "SLURM library could not be found")
ELSE (NOT SLURM_FOUND)
	SET (SLURM_LIBRARIES ${SLURM_LIBRARY})
	SET (SLURM_INCLUDE_DIRS ${SLURM_INCLUDE_DIR})
	FIND_PATH(SLURM_MODULES_DIR NAMES lib/slurm DOC "Directory containing SLURM extensions.")
	IF (NOT SLURM_MODULES_DIR)
		MESSAGE(FATAL_ERROR "SLURM extensions directory could not be found")
	ENDIF (NOT SLURM_MODULES_DIR)
ENDIF (NOT SLURM_FOUND)
MARK_AS_ADVANCED (SLURM_LIBRARIES SLURM_INCLUDE_DIRS)

#
# Use shared TMPDIR option?
#
OPTION(ENABLE_SHARED_STORAGE "Enable shared TMPDIR flag" FALSE)
SET(SHARED_STORAGE_PATH "" CACHE PATH "Base directory for shared TMPDIR storage")
IF (ENABLE_SHARED_STORAGE)
    IF (NOT SHARED_STORAGE_PATH)
        MESSAGE(FATAL_ERROR "When shared TMPDIR is enabled, SHARED_STORAGE_PATH must be set.")
    ENDIF (NOT SHARED_STORAGE_PATH)
    ADD_COMPILE_DEFINITIONS(WITH_SHARED_STORAGE SHARED_STORAGE_PATH=${SHARED_STORAGE_PATH})
ENDIF (ENABLE_SHARED_STORAGE)

#
# Build the plugin as a library (that's what it is):
#
ADD_LIBRARY (auto_tmpdir MODULE auto_tmpdir.c)
INCLUDE_DIRECTORIES (BEFORE ${SLURM_INCLUDE_DIRS})
SET_TARGET_PROPERTIES (auto_tmpdir PROPERTIES PREFIX "" SUFFIX "" OUTPUT_NAME "auto_tmpdir.so")
INSTALL (TARGETS auto_tmpdir DESTINATION ${SLURM_MODULES_DIR}/lib/slurm)

